THREE.OBJExporter=class t{parse(t){let e="",r=0,o=0,i=0,n=new THREE.Vector3,f=new THREE.Color,l=new THREE.Vector3,u=new THREE.Vector2,a=[];return t.traverse(function(t){!0===t.isMesh&&function t(f){let m=0,$=0,c=0,x=f.geometry,p=new THREE.Matrix3,s=x.getAttribute("position"),g=x.getAttribute("normal"),v=x.getAttribute("uv"),b=x.getIndex();if(e+="o "+f.name+"\n",f.material&&f.material.name&&(e+="usemtl "+f.material.name+"\n"),void 0!==s)for(let y=0,A=s.count;y<A;y++,m++)n.fromBufferAttribute(s,y),n.applyMatrix4(f.matrixWorld),e+="v "+n.x+" "+n.y+" "+n.z+"\n";if(void 0!==v)for(let d=0,B=v.count;d<B;d++,c++)u.fromBufferAttribute(v,d),e+="vt "+u.x+" "+u.y+"\n";if(void 0!==g){p.getNormalMatrix(f.matrixWorld);for(let M=0,_=g.count;M<_;M++,$++)l.fromBufferAttribute(g,M),l.applyMatrix3(p).normalize(),e+="vn "+l.x+" "+l.y+" "+l.z+"\n"}if(null!==b)for(let w=0,z=b.count;w<z;w+=3){for(let L=0;L<3;L++){let W=b.getX(w+L)+1;a[L]=r+W+(g||v?"/"+(v?o+W:"")+(g?"/"+(i+W):""):"")}e+="f "+a.join(" ")+"\n"}else for(let V=0,j=s.count;V<j;V+=3){for(let S=0;S<3;S++){let h=V+S+1;a[S]=r+h+(g||v?"/"+(v?o+h:"")+(g?"/"+(i+h):""):"")}e+="f "+a.join(" ")+"\n"}r+=m,o+=c,i+=$}(t),!0===t.isLine&&function t(o){let i=0,f=o.geometry,l=o.type,u=f.getAttribute("position");if(e+="o "+o.name+"\n",void 0!==u)for(let a=0,m=u.count;a<m;a++,i++)n.fromBufferAttribute(u,a),n.applyMatrix4(o.matrixWorld),e+="v "+n.x+" "+n.y+" "+n.z+"\n";if("Line"===l){e+="l ";for(let $=1,c=u.count;$<=c;$++)e+=r+$+" ";e+="\n"}if("LineSegments"===l)for(let x=1,p=x+1,s=u.count;x<s;x+=2,p=x+1)e+="l "+(r+x)+" "+(r+p)+"\n";r+=i}(t),!0===t.isPoints&&function t(o){let i=0,l=o.geometry,u=l.getAttribute("position"),a=l.getAttribute("color");if(e+="o "+o.name+"\n",void 0!==u){for(let m=0,$=u.count;m<$;m++,i++)n.fromBufferAttribute(u,m),n.applyMatrix4(o.matrixWorld),e+="v "+n.x+" "+n.y+" "+n.z,void 0!==a&&(f.fromBufferAttribute(a,m).convertLinearToSRGB(),e+=" "+f.r+" "+f.g+" "+f.b),e+="\n";e+="p ";for(let c=1,x=u.count;c<=x;c++)e+=r+c+" ";e+="\n"}r+=i}(t)}),e}};