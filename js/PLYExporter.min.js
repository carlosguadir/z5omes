THREE.PLYExporter=class t{parse(t,e,n){function i(e){t.traverse(function(t){if(!0===t.isMesh||t.isPoints){let n=t,i=n.geometry;!0===i.hasAttribute("position")&&e(n,i)}})}n=Object.assign({binary:!1,excludeAttributes:[],littleEndian:!1},n);let l=n.excludeAttributes,r=!0,o=!1,a=!1,u=!1,f=0,s=0;t.traverse(function(t){if(!0===t.isMesh){let e=t.geometry,n=e.getAttribute("position"),i=e.getAttribute("normal"),l=e.getAttribute("uv"),$=e.getAttribute("color"),d=e.getIndex();void 0!==n&&(f+=n.count,s+=d?d.count/3:n.count/3,void 0!==i&&(o=!0),void 0!==l&&(u=!0),void 0!==$&&(a=!0))}else if(t.isPoints){let p=t.geometry,g=p.getAttribute("position");f+=g.count,r=!1}});let $=new THREE.Color;if(r=r&&-1===l.indexOf("index"),o=o&&-1===l.indexOf("normal"),a=a&&-1===l.indexOf("color"),u=u&&-1===l.indexOf("uv"),r&&s!==Math.floor(s))return console.error("PLYExporter: Failed to generate a valid PLY file with triangle indices because the number of indices is not divisible by 3."),null;let d=`ply
format ${n.binary?n.littleEndian?"binary_little_endian":"binary_big_endian":"ascii"} 1.0
element vertex ${f}
property float x
property float y
property float z
`;!0===o&&(d+="property float nx\nproperty float ny\nproperty float nz\n"),!0===u&&(d+="property float s\nproperty float t\n"),!0===a&&(d+="property uchar red\nproperty uchar green\nproperty uchar blue\n"),!0===r&&(d+=`element face ${s}
property list uchar int vertex_index
`),d+="end_header\n";let p=new THREE.Vector3,g=new THREE.Matrix3,c=null;if(!0===n.binary){let b=new TextEncoder().encode(d),y=f*(12+(o?12:0)+(a?3:0)+(u?8:0)),x=r?13*s:0,_=new DataView(new ArrayBuffer(b.length+y+x));new Uint8Array(_.buffer).set(b,0);let m=b.length,E=b.length+y,A=0;i(function(t,e){let i=e.getAttribute("position"),l=e.getAttribute("normal"),f=e.getAttribute("uv"),s=e.getAttribute("color"),d=e.getIndex();g.getNormalMatrix(t.matrixWorld);for(let c=0,b=i.count;c<b;c++)p.fromBufferAttribute(i,c),p.applyMatrix4(t.matrixWorld),_.setFloat32(m,p.x,n.littleEndian),m+=4,_.setFloat32(m,p.y,n.littleEndian),m+=4,_.setFloat32(m,p.z,n.littleEndian),m+=4,!0===o&&(null!=l?(p.fromBufferAttribute(l,c),p.applyMatrix3(g).normalize(),_.setFloat32(m,p.x,n.littleEndian),m+=4,_.setFloat32(m,p.y,n.littleEndian),m+=4,_.setFloat32(m,p.z,n.littleEndian),m+=4):(_.setFloat32(m,0,n.littleEndian),m+=4,_.setFloat32(m,0,n.littleEndian),m+=4,_.setFloat32(m,0,n.littleEndian),m+=4)),!0===u&&(null!=f?(_.setFloat32(m,f.getX(c),n.littleEndian),m+=4,_.setFloat32(m,f.getY(c),n.littleEndian),m+=4):(_.setFloat32(m,0,n.littleEndian),m+=4,_.setFloat32(m,0,n.littleEndian),m+=4)),!0===a&&(null!=s?($.fromBufferAttribute(s,c).convertLinearToSRGB(),_.setUint8(m,Math.floor(255*$.r)),m+=1,_.setUint8(m,Math.floor(255*$.g)),m+=1,_.setUint8(m,Math.floor(255*$.b)),m+=1):(_.setUint8(m,255),m+=1,_.setUint8(m,255),m+=1,_.setUint8(m,255),m+=1));if(!0===r){if(null!==d)for(let y=0,x=d.count;y<x;y+=3)_.setUint8(E,3),E+=1,_.setUint32(E,d.getX(y+0)+A,n.littleEndian),E+=4,_.setUint32(E,d.getX(y+1)+A,n.littleEndian),E+=4,_.setUint32(E,d.getX(y+2)+A,n.littleEndian),E+=4;else for(let v=0,F=i.count;v<F;v+=3)_.setUint8(E,3),E+=1,_.setUint32(E,A+v,n.littleEndian),E+=4,_.setUint32(E,A+v+1,n.littleEndian),E+=4,_.setUint32(E,A+v+2,n.littleEndian),E+=4}A+=i.count}),c=_.buffer}else{let v=0,F="",U="";i(function(t,e){let n=e.getAttribute("position"),i=e.getAttribute("normal"),l=e.getAttribute("uv"),f=e.getAttribute("color"),d=e.getIndex();g.getNormalMatrix(t.matrixWorld);for(let c=0,b=n.count;c<b;c++){p.fromBufferAttribute(n,c),p.applyMatrix4(t.matrixWorld);let y=p.x+" "+p.y+" "+p.z;!0===o&&(null!=i?(p.fromBufferAttribute(i,c),p.applyMatrix3(g).normalize(),y+=" "+p.x+" "+p.y+" "+p.z):y+=" 0 0 0"),!0===u&&(null!=l?y+=" "+l.getX(c)+" "+l.getY(c):y+=" 0 0"),!0===a&&(null!=f?($.fromBufferAttribute(f,c).convertLinearToSRGB(),y+=" "+Math.floor(255*$.r)+" "+Math.floor(255*$.g)+" "+Math.floor(255*$.b)):y+=" 255 255 255"),F+=y+"\n"}if(!0===r){if(null!==d)for(let x=0,_=d.count;x<_;x+=3)U+=`3 ${d.getX(x+0)+v}`,U+=` ${d.getX(x+1)+v}`,U+=` ${d.getX(x+2)+v}
`;else for(let m=0,E=n.count;m<E;m+=3)U+=`3 ${v+m} ${v+m+1} ${v+m+2}
`;s+=d?d.count/3:n.count/3}v+=n.count}),c=`${d}${F}${r?`${U}
`:"\n"}`}return"function"==typeof e&&requestAnimationFrame(()=>e(c)),c}};